<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wgARCAKAAyADASIAAhEBAxEB/8QA
        HAABAAIDAQEBAAAAAAAAAAAAAAQFAgYHAwEI/8QAFAEBAAAAAAAAAAAAAAAAAAAAAP/aAAwDAQACEAMQ
        AAAB6oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAABjlFMMfgk+9fOI9ZjietrS+xd0dhrB6S4I2/CshEKJ5DYdi55u5E0xFJW56FKOlaXsPLCRY
        0w67lpuJSU0f6bn0PhHWjHlXtSlh03kUk7/znc/z0S7bXh+hrLkHXwAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABFlYkFnifJ3l7lBjb1h5+3y1PLWNzoypZyyXC2PA0JYRDy3ep2I5rF33TCLKbmenLOzaWaakWJaY7l9
        OIfdgpiP1rWehnEKbtPKirk+/TS3/Pf6Y5yctS7YuOv1lmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        6htj4eJlFece5BnN8p5YNWSstB0PvDskt26/ScENWdYj1HsasPnIzXXrP8ir+6U//9oADAMBAAIAAwAA
        ABDzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzTzjzzzzTzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzziBQwyQBSxDjShwTjxQyCBTzzzzzzzzzzzzzzzzzzzzzzzzzzzywhTDBgDTgSxyjRSyzTCghzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzxzyzzxzxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzz/xAAUEQEAAAAAAAAAAAAAAAAAAACg/9oACAEDAQE/EHof/8QAFBEBAAAAAAAAAAAAAAAAAAAAoP/a
        AAgBAgEBPxB6H//EACkQAQABAgUEAgIDAQEAAAAAAAERACExQVFhkRBxgaEg0VCxsMHw8WD/2gAIAQEA
        AT8Q/moZ+C0Pwnvx8Z78fBan4LGTx+dUcWtN4tCiEidmlLEcOgTAOTfAb02U2mDiplF1JHw03kP+wNqW
        LtSOtCMVtoVv/FU0AM1rKGzUUIyNRvhwMVkG9GcsiEtu4tBgtmT7qP8AJMAjp9ug+2lmz/iDOpyw40uw
        WqEuONbuNqH20k2f8SZdHWEmBUYk7Qa8U0XWbl+6GiTGGty4+qiOm44LFGpRu85S6AZq2Cke1SdTbuux
        BRWeJiWeannQOB3C3kxN6QBERvJS2Rs8CDHTHtsU3FV5m2EPctJwjMn7yDxTyyPtJiGSZ+RbCmfToQM0
        mymasNgpoqMthfDB4p2G48polzcfDTAFztpj92Yj+bcMo/fXMipPzk0x0qPVHDaTuNIaiIJlOPqaCOjh
        SBGYNibP9UUVKZqqh6Hnrge1S3idqr6UkRgOiQODqkQgOqSOGnGFFYiAfdYGduqrUOgQXIOKGgh0cQ+i
        aBAGnQTE09SYDKzg/SlXqnNsEPIvPV2NpnGVnZJPNPtCroyFylJOtKJVzer5aSWxAnIOPzbhlH6652qT
        8iGiOhQ6oYLSexegITGAzjH1NDPRwoAhEG5F3+qKqlN0RU9Lx1wNQ3iNor7UkQkOqSPD1SIyHRJPBSjE
        isVAHqsC0W6qdA6hBcA5pSCXQzPsigyDr0URNPVmAQk5PUUq9V4tih5R46vxtMYSudgl8Ua0iupJHIUE
        I0AhHM79XSUslmAOBcfm0HidKTbtQpCFOxSlBJh0CZAyL4Deosm9xzUSi6iA8tN5T/kCknGpH0lGK21K
        2/iqaAOaxhTYqLEYCp3w4mKyTenGSTKW3MSgyWxB9VG+SYhXX6dB9tDFn/EOVQlhs1uyWqVsONLutqH2
        0EWf8S59HesmRCxZ2h04poOsXL9UtMmcNbl19VEdN1xWKdWtN3KTRHJG41I9qxqbdx3JKKzxEy/qp90H
        hcwt4MXagAAALQUNkbPIhx116blNXTaZvgH3DS8JzI+4Ac08ujjLMUzXPwLY0T8tSgzWbC5qy3mooow3
        F8EPijZbjwmqXNg8lMAXz2Y/VkAf+Gj4x8EoPhHfn4x35+EVHf4Ms3msP5pP/9k=
</value>
  </data>
</root>